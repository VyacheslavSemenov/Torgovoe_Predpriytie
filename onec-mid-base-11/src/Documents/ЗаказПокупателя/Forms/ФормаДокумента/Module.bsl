
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды               
	
	// ++ Семёнов Внесение изменений в конфигурацию на поддержке 23.03.2024
	Д_НастроитьФормуПриСоздании(); 
	// --
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// ++ Семёнов Внесение изменений в конфигурацию на поддержке (Добавлено подсчет скидки для документа ЗаказПокупателя) 23.03.2024
	
	Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;

	ТекущиеДанные.Сумма = Сумма - (Сумма * Объект.Д_СогласованнаяСкидка / 100);
	
	// --  
	
	// ++ Семёнов Внесение изменений в конфигурацию на поддержке (Убран типовой код) 23.03.2024
	
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	// -- 
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти   

//@skip-check module-structure-top-region
#Область Д_ДополнительныеПроцедурыИФункции 

//@skip-check form-module-missing-pragma
Процедура Д_НастроитьФормуПриСоздании() 
	
	
	//Добавим команду
	
	НоваяКоманда = Команды.Добавить("ПересчитатьТаблицу");
	НоваяКоманда.Заголовок = "Пересчитать таблицу";
	НоваяКоманда.Действие = "ПересчитатьТаблицу";    
	
	//Добавим элементы
	Группа = Элементы.Вставить("ПересчитатьТаблицу", Тип("ГруппаФормы"),, Элементы.Страницы);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	//@skip-check wrong-type-expression
	Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
	Группа.ОтображатьЗаголовок = Ложь;
	
	ПолеВвода = Элементы.Добавить("Д_СогласованнаяСкидка", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Д_СогласованнаяСкидка";
	ПолеВвода.УстановитьДействие("ПриИзменении", "КонтактныеЛица_СогласованнаяСкидкаПриИзмененииПосле");
	
	Кнопка = Элементы.Вставить("КнопкаПересчитатьТаблицу", Тип("КнопкаФормы"),,Группа);
    Кнопка.ИмяКоманды = "ПересчитатьТаблицу";
    Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура КонтактныеЛица_СогласованнаяСкидкаПриИзмененииПосле(Элемент)
	
	// ++ Семёнов Внесение изменений в конфигурацию на поддержке 23.03.2024
	
	СписокОтветов = Новый СписокЗначений;
	СписокОтветов.Добавить("Да");
	СписокОтветов.Добавить("Нет");
	
	
	ТекстВопроса = ("Изменен процент скидки, пересчитать табличные части документа ?"); 
	
	ОтветПользователя = Ждать ВопросАсинх(ТекстВопроса,СписокОтветов);
	
	
	Если ОтветПользователя="Да" Тогда
			
		Для Каждого СтрокаТовар Из Объект.Товары Цикл

        РассчитатьСуммуСтроки(СтрокаТовар);

    КонецЦикла;

    Для Каждого СтрокаУслуга Из Объект.Услуги Цикл

        РассчитатьСуммуСтроки(СтрокаУслуга);

    КонецЦикла     
		
	КонецЕсли;
	
	// --
КонецПроцедуры


//@skip-check module-unused-method
&НаКлиенте
Процедура ПересчитатьТаблицу(Команда)

    // ++ Семёнов Внесение изменений в конфигурацию на поддержке 23.03.2024

    РассчитатьСоСкидкой();

    // --

КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура ДЗСогласованнаяСкидкаПриИзменении(Элемент)
                                                                            
    // ++ Семёнов Внесение изменений в конфигурацию на поддержке 23.03.2024

    РассчитатьСоСкидкой();

    // --

КонецПроцедуры

&НаКлиенте
Асинх Процедура РассчитатьСоСкидкой()

    // ++ Семёнов Внесение изменений в конфигурацию на поддержке 23.03.2024

	Если Объект.Товары.Количество() <> 0 ИЛИ Объект.Услуги.Количество() <> 0 Тогда
		
    Для Каждого СтрокаТовар Из Объект.Товары Цикл

        РассчитатьСуммуСтроки(СтрокаТовар);

    КонецЦикла;

    Для Каждого СтрокаУслуга Из Объект.Услуги Цикл

        РассчитатьСуммуСтроки(СтрокаУслуга);

    КонецЦикла
		
	КонецЕсли;
    // --

КонецПроцедуры

#КонецОбласти